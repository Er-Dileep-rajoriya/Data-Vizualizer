{"version":3,"file":"cubejs-client-react.js","sources":["../src/CubeContext.js","../src/QueryRenderer.jsx","../src/QueryRendererWithTotals.jsx","../src/utils.js","../src/QueryBuilder.jsx","../src/CubeProvider.jsx","../src/hooks/deep-compare-memoize.js","../src/hooks/is-mounted.js","../src/hooks/cube-fetch.js","../src/hooks/cube-sql.js","../src/hooks/dry-run.js","../src/hooks/lazy-dry-run.js","../src/hooks/cube-query.js","../src/hooks/cube-meta.js"],"sourcesContent":["import { createContext } from 'react';\n\nexport default createContext(null);\n","import React from 'react';\nimport { equals, toPairs, fromPairs } from 'ramda';\nimport { isQueryPresent } from '@cubejs-client/core';\n\nimport CubeContext from './CubeContext';\n\nexport default class QueryRenderer extends React.Component {\n  static contextType = CubeContext;\n\n  static defaultProps = {\n    cubeApi: null,\n    query: null,\n    render: null,\n    queries: null,\n    loadSql: null,\n    updateOnlyOnStateChange: false,\n    resetResultSetOnChange: true\n  };\n\n  // @deprecated use `isQueryPresent` from `@cubejs-client/core`\n  static isQueryPresent(query) {\n    return isQueryPresent(query);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.mutexObj = {};\n  }\n\n  componentDidMount() {\n    const { query, queries } = this.props;\n    if (query) {\n      this.load(query);\n    }\n    if (queries) {\n      this.loadQueries(queries);\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {\n      query, queries, render, cubeApi, loadSql, updateOnlyOnStateChange\n    } = this.props;\n    if (!updateOnlyOnStateChange) {\n      return true;\n    }\n    return !equals(nextProps.query, query)\n      || !equals(nextProps.queries, queries)\n      || ((nextProps.render == null || render == null) && nextProps.render !== render)\n      || nextProps.cubeApi !== cubeApi\n      || nextProps.loadSql !== loadSql\n      || !equals(nextState, this.state)\n      || nextProps.updateOnlyOnStateChange !== updateOnlyOnStateChange;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { query, queries } = this.props;\n    if (!equals(prevProps.query, query)) {\n      this.load(query);\n    }\n\n    if (!equals(prevProps.queries, queries)) {\n      this.loadQueries(queries);\n    }\n  }\n\n  cubeApi() {\n    // eslint-disable-next-line react/destructuring-assignment\n    return this.props.cubeApi || this.context && this.context.cubeApi;\n  }\n\n  load(query) {\n    const { resetResultSetOnChange } = this.props;\n    this.setState({\n      isLoading: true,\n      error: null,\n      sqlQuery: null,\n      ...(resetResultSetOnChange ? { resultSet: null } : {})\n    });\n    const { loadSql } = this.props;\n    const cubeApi = this.cubeApi();\n\n    if (query && isQueryPresent(query)) {\n      if (loadSql === 'only') {\n        cubeApi.sql(query, { mutexObj: this.mutexObj, mutexKey: 'sql' })\n          .then(sqlQuery => this.setState({ sqlQuery, error: null, isLoading: false }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      } else if (loadSql) {\n        Promise.all([\n          cubeApi.sql(query, { mutexObj: this.mutexObj, mutexKey: 'sql' }),\n          cubeApi.load(query, { mutexObj: this.mutexObj, mutexKey: 'query' })\n        ]).then(([sqlQuery, resultSet]) => this.setState({\n          sqlQuery, resultSet, error: null, isLoading: false\n        }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      } else {\n        cubeApi.load(query, { mutexObj: this.mutexObj, mutexKey: 'query' })\n          .then(resultSet => this.setState({ resultSet, error: null, isLoading: false }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      }\n    }\n  }\n\n  loadQueries(queries) {\n    const cubeApi = this.cubeApi();\n    const { resetResultSetOnChange } = this.props;\n    this.setState({\n      isLoading: true,\n      ...(resetResultSetOnChange ? { resultSet: null } : {}),\n      error: null\n    });\n\n    const resultPromises = Promise.all(toPairs(queries).map(\n      ([name, query]) => cubeApi.load(query, { mutexObj: this.mutexObj, mutexKey: name }).then(r => [name, r])\n    ));\n\n    resultPromises\n      .then(resultSet => this.setState({\n        resultSet: fromPairs(resultSet),\n        error: null,\n        isLoading: false\n      }))\n      .catch(error => this.setState({\n        ...(resetResultSetOnChange ? { resultSet: null } : {}),\n        error,\n        isLoading: false\n      }));\n  }\n\n  render() {\n    const {\n      error, queries, resultSet, isLoading, sqlQuery\n    } = this.state;\n    const { render } = this.props;\n\n    const loadState = {\n      error: error ? new Error(error.response?.plainError || error.message || error.toString()) : null,\n      resultSet: queries ? (resultSet || {}) : resultSet,\n      loadingState: { isLoading },\n      sqlQuery\n    };\n\n    if (render) {\n      return render(loadState);\n    }\n\n    return null;\n  }\n}\n","import React from 'react';\nimport QueryRenderer from './QueryRenderer.jsx';\n\nconst QueryRendererWithTotals = ({ query, ...restProps }) => (\n  <QueryRenderer\n    queries={{\n      totals: {\n        ...query,\n        dimensions: [],\n        timeDimensions: query.timeDimensions\n          ? query.timeDimensions.map(td => ({ ...td, granularity: null }))\n          : undefined\n      },\n      main: query\n    }}\n    {...restProps}\n  />\n);\n\nexport default QueryRendererWithTotals;\n","export function removeEmpty(obj) {\n  if (typeof obj !== 'object') {\n    return obj;\n  }\n\n  return Object.fromEntries(\n    Object.entries(obj)\n      .filter(([, v]) => v != null)\n      .map(([k, v]) => {\n        if (Array.isArray(v)) {\n          return [k, v.map(removeEmpty)];\n        }\n\n        return [k, typeof v === 'object' ? removeEmpty(v) : v];\n      })\n  );\n}\n","import React from 'react';\nimport { clone, equals, indexBy, pick, prop, uniq, uniqBy } from 'ramda';\nimport {\n  defaultHeuristics,\n  defaultOrder,\n  flattenFilters,\n  getQueryMembers,\n  isQueryPresent,\n  moveItemInArray,\n  movePivotItem,\n  validateQuery,\n  ResultSet,\n  removeEmptyQueryFields\n} from '@cubejs-client/core';\n\nimport QueryRenderer from './QueryRenderer.jsx';\nimport CubeContext from './CubeContext';\nimport { removeEmpty } from './utils';\n\nconst granularities = [\n  { name: undefined, title: 'w/o grouping' },\n  { name: 'second', title: 'Second' },\n  { name: 'minute', title: 'Minute' },\n  { name: 'hour', title: 'Hour' },\n  { name: 'day', title: 'Day' },\n  { name: 'week', title: 'Week' },\n  { name: 'month', title: 'Month' },\n  { name: 'quarter', title: 'Quarter' },\n  { name: 'year', title: 'Year' },\n];\n\nexport default class QueryBuilder extends React.Component {\n  static contextType = CubeContext;\n\n  static defaultProps = {\n    cubeApi: null,\n    stateChangeHeuristics: null,\n    disableHeuristics: false,\n    render: null,\n    wrapWithQueryRenderer: true,\n    defaultChartType: 'line',\n    defaultQuery: {},\n    initialVizState: null,\n    onVizStateChanged: null,\n\n    // deprecated\n    query: null,\n    setQuery: null,\n    vizState: null,\n    setVizState: null,\n  };\n\n  // This is an anti-pattern, only kept for backward compatibility\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#anti-pattern-unconditionally-copying-props-to-state\n  static getDerivedStateFromProps(props, state) {\n    if (props.query || props.vizState) {\n      const nextState = {\n        ...state,\n        ...(props.vizState || {}),\n      };\n\n      if (Array.isArray(props.query)) {\n        throw new Error('Array of queries is not supported.');\n      }\n\n      return {\n        ...nextState,\n        query: {\n          ...nextState.query,\n          ...(props.query || {}),\n        },\n      };\n    }\n    return null;\n  }\n\n  static resolveMember(type, { meta, query }) {\n    if (!meta) {\n      return [];\n    }\n\n    if (Array.isArray(query)) {\n      return query.reduce(\n        (memo, currentQuery) => memo.concat(\n          QueryBuilder.resolveMember(type, {\n            meta,\n            query: currentQuery,\n          })\n        ),\n        []\n      );\n    }\n\n    if (type === 'timeDimensions') {\n      return (query.timeDimensions || []).map((m, index) => ({\n        ...m,\n        dimension: {\n          ...meta.resolveMember(m.dimension, 'dimensions'),\n          granularities,\n        },\n        index,\n      }));\n    }\n\n    return (query[type] || []).map((m, index) => ({\n      index,\n      ...meta.resolveMember(m, type),\n    }));\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: props.defaultQuery || props.query,\n      chartType: props.defaultChartType,\n      validatedQuery: props.query, // deprecated, validatedQuery should not be set until after dry-run for safety\n      missingMembers: [],\n      // todo: rename to `isMetaReady`\n      isFetchingMeta: true,\n      dryRunResponse: null,\n      ...props.vizState, // deprecated\n      ...props.initialVizState,\n    };\n\n    this.mutexObj = {};\n    this.orderMembersOrderKeys = [];\n  }\n\n  async componentDidMount() {\n    this.prevContext = this.context;\n    await this.fetchMeta();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const { schemaVersion, onSchemaChange } = this.props;\n    const { meta } = this.state;\n\n    if (this.prevContext?.cubeApi !== this.context?.cubeApi) {\n      this.prevContext = this.context;\n      await this.fetchMeta();\n    }\n\n    if (prevProps.schemaVersion !== schemaVersion) {\n      try {\n        const newMeta = await this.cubeApi().meta();\n        if (!equals(newMeta, meta) && typeof onSchemaChange === 'function') {\n          onSchemaChange({\n            schemaVersion,\n            refresh: async () => {\n              await this.fetchMeta();\n            },\n          });\n        }\n      } catch (error) {\n        // eslint-disable-next-line\n        this.setState({ metaError: error });\n      }\n    }\n  }\n\n  fetchMeta = async () => {\n    if (!this.cubeApi()) {\n      return;\n    }\n\n    let meta;\n    let metaError = null;\n    let richMetaError = null;\n    let metaErrorStack = null;\n\n    try {\n      this.setState({ isFetchingMeta: true });\n      meta = await this.cubeApi().meta();\n    } catch (error) {\n      metaError = error.response?.plainError || error;\n      richMetaError = error;\n      metaErrorStack = error.response?.stack?.replace(error.message || '', '') || '';\n    }\n\n    this.setState(\n      {\n        meta,\n        metaError: metaError ? new Error(metaError.message || metaError.toString()) : null,\n        richMetaError,\n        metaErrorStack,\n        isFetchingMeta: false,\n      },\n      () => {\n        // Run update query to force viz state update\n        // This will catch any new missing members, and also validate the query against the new meta\n        this.updateQuery({});\n      }\n    );\n  };\n\n  cubeApi() {\n    const { cubeApi } = this.props;\n    // eslint-disable-next-line react/destructuring-assignment\n    return cubeApi || (this.context && this.context.cubeApi);\n  }\n\n  getMissingMembers(query, meta) {\n    if (!meta) {\n      return [];\n    }\n\n    return getQueryMembers(query)\n      .map((member) => {\n        const resolvedMember = meta.resolveMember(member, ['measures', 'dimensions', 'segments']);\n        if (resolvedMember.error) {\n          return member;\n        }\n        return false;\n      })\n      .filter(Boolean);\n  }\n\n  isQueryPresent() {\n    const { query } = this.state;\n    return QueryRenderer.isQueryPresent(query);\n  }\n\n  prepareRenderProps(queryRendererProps) {\n    const getName = (member) => member.name;\n\n    const toTimeDimension = (member) => {\n      const rangeSelection = member.compareDateRange\n        ? { compareDateRange: member.compareDateRange }\n        : { dateRange: member.dateRange };\n\n      return removeEmpty({\n        dimension: member.dimension.name,\n        granularity: member.granularity,\n        ...rangeSelection,\n      });\n    };\n\n    const toFilter = (member) => ({\n      member: member.member?.name || member.dimension?.name,\n      operator: member.operator,\n      ...(['set', 'notSet'].includes(member.operator) ? {} : { values: member.values }),\n    });\n\n    const updateMethods = (memberType, toQuery = getName) => ({\n      add: (member) => {\n        const { query } = this.state;\n        this.updateQuery({\n          [memberType]: (query[memberType] || []).concat(toQuery(member)),\n        });\n      },\n      remove: (member) => {\n        const { query } = this.state;\n\n        return this.updateQuery({\n          [memberType]: (query[memberType] || []).filter((_, index) => index !== member.index),\n        });\n      },\n      update: (member, updateWith) => {\n        const { query } = this.state;\n        const members = (query[memberType] || []).concat([]);\n        members.splice(member.index, 1, toQuery(updateWith));\n        return this.updateQuery({\n          [memberType]: members,\n        });\n      },\n    });\n\n    const {\n      meta,\n      metaError,\n      richMetaError,\n      query,\n      queryError,\n      chartType,\n      pivotConfig,\n      validatedQuery,\n      missingMembers,\n      isFetchingMeta,\n      dryRunResponse,\n      metaErrorStack\n    } = this.state;\n\n    const flatFilters = uniqBy((filter) => `${prop('member', filter)}${prop('operator', filter)}`,\n      flattenFilters((meta && query.filters) || []).map((filter) => ({\n        ...filter,\n        member: filter.member || filter.dimension,\n      })));\n\n    const filters = flatFilters.map((m, i) => ({\n      ...m,\n      dimension: meta.resolveMember(m.member || m.dimension, ['dimensions', 'measures']),\n      operators: meta.filterOperatorsForMember(m.member || m.dimension, ['dimensions', 'measures']),\n      index: i,\n    }));\n\n    const measures = QueryBuilder.resolveMember('measures', this.state);\n    const dimensions = QueryBuilder.resolveMember('dimensions', this.state);\n    const timeDimensions = QueryBuilder.resolveMember('timeDimensions', this.state);\n    const segments = ((meta && query.segments) || []).map((m, i) => ({\n      index: i,\n      ...meta.resolveMember(m, 'segments'),\n    }));\n\n    let availableMeasures = [];\n    let availableDimensions = [];\n    let availableSegments = [];\n    let availableFilterMembers = [];\n\n    const availableMembers = meta?.membersGroupedByCube() || {\n      measures: [],\n      dimensions: [],\n      segments: [],\n      timeDimensions: [],\n    };\n\n    if (meta) {\n      availableMeasures = meta.membersForQuery(query, 'measures');\n      availableDimensions = meta.membersForQuery(query, 'dimensions');\n      availableSegments = meta.membersForQuery(query, 'segments');\n\n      const indexedMeasures = indexBy(prop('cubeName'), availableMembers.measures);\n      const indexedDimensions = indexBy(prop('cubeName'), availableMembers.dimensions);\n      const cubeNames = uniq([...Object.keys(indexedMeasures), ...Object.keys(indexedDimensions)]).sort();\n\n      availableFilterMembers = cubeNames.map((name) => {\n        const cube = indexedMeasures[name] || indexedDimensions[name];\n\n        return {\n          ...cube,\n          members: [\n            ...indexedMeasures[name]?.members,\n            ...indexedDimensions[name]?.members\n          ].sort((a, b) => (a.shortTitle > b.shortTitle ? 1 : -1)),\n        };\n      });\n    }\n\n    const activeOrder = Array.isArray(query.order) ? Object.fromEntries(query.order) : query.order;\n    const members = [\n      ...measures,\n      ...dimensions,\n      ...timeDimensions.map(({ dimension }) => dimension)\n    ];\n\n    let orderMembers = uniqBy(prop('id'), [\n      // uniqBy prefers first, so these will only be added if not already in the query\n      ...members.map(({ name, title }) => ({ id: name, title, order: activeOrder?.[name] || 'none' })),\n    ]);\n\n    if (this.orderMembersOrderKeys.length !== orderMembers.length) {\n      this.orderMembersOrderKeys = orderMembers.map(({ id }) => id);\n    }\n\n    if (this.orderMembersOrderKeys.length) {\n      // Preserve order until the members change or manually re-ordered\n      // This is needed so that when an order member becomes active, it doesn't jump to the top of the list\n      orderMembers = (this.orderMembersOrderKeys || [])\n        .map((id) => orderMembers.find((member) => member.id === id))\n        .filter(Boolean);\n    }\n\n    return {\n      meta,\n      metaError,\n      richMetaError,\n      metaErrorStack,\n      query,\n      error: queryError, // Match same name as QueryRenderer prop\n      validatedQuery,\n      isQueryPresent: this.isQueryPresent(),\n      chartType,\n      measures,\n      dimensions,\n      timeDimensions,\n      segments,\n      filters,\n      orderMembers,\n      availableMeasures,\n      availableDimensions,\n      availableTimeDimensions: availableDimensions.filter((m) => m.type === 'time'),\n      availableSegments,\n      availableMembers,\n      availableFilterMembers,\n      updateQuery: (queryUpdate) => this.updateQuery(queryUpdate),\n      updateMeasures: updateMethods('measures'),\n      updateDimensions: updateMethods('dimensions'),\n      updateSegments: updateMethods('segments'),\n      updateTimeDimensions: updateMethods('timeDimensions', toTimeDimension),\n      updateFilters: updateMethods('filters', toFilter),\n      updateChartType: (newChartType) => this.updateVizState({ chartType: newChartType }),\n      updateOrder: {\n        set: (memberId, newOrder = 'asc') => {\n          this.updateQuery({\n            order: orderMembers\n              .map((orderMember) => ({\n                ...orderMember,\n                order: orderMember.id === memberId ? newOrder : orderMember.order,\n              }))\n              .reduce((acc, { id, order }) => (order !== 'none' ? [...acc, [id, order]] : acc), []),\n          });\n        },\n        update: (order) => {\n          this.updateQuery({\n            order,\n          });\n        },\n        reorder: (sourceIndex, destinationIndex) => {\n          if (sourceIndex == null || destinationIndex == null) {\n            return;\n          }\n\n          const nextArray = moveItemInArray(orderMembers, sourceIndex, destinationIndex);\n          this.orderMembersOrderKeys = nextArray.map(({ id }) => id);\n\n          this.updateQuery({\n            order: nextArray.reduce((acc, { id, order }) => (order !== 'none' ? [...acc, [id, order]] : acc), []),\n          });\n        },\n      },\n      pivotConfig,\n      updatePivotConfig: {\n        moveItem: ({ sourceIndex, destinationIndex, sourceAxis, destinationAxis }) => {\n          this.updateVizState({\n            pivotConfig: movePivotItem(pivotConfig, sourceIndex, destinationIndex, sourceAxis, destinationAxis),\n          });\n        },\n        update: (config) => {\n          const { limit } = config;\n\n          this.updateVizState({\n            pivotConfig: {\n              ...pivotConfig,\n              ...config,\n            },\n            ...(limit ? { query: { ...query, limit } } : null),\n          });\n        },\n      },\n      missingMembers,\n      refresh: this.fetchMeta,\n      isFetchingMeta,\n      dryRunResponse,\n      ...queryRendererProps,\n    };\n  }\n\n  updateQuery(queryUpdate) {\n    const { query } = this.state;\n\n    this.updateVizState({\n      query: removeEmptyQueryFields({\n        ...query,\n        ...queryUpdate,\n      }),\n    });\n  }\n\n  async updateVizState(state) {\n    const { setQuery, setVizState } = this.props;\n    const { query: stateQuery, pivotConfig: statePivotConfig, chartType, meta } = this.state;\n\n    const finalState = this.applyStateChangeHeuristics(state);\n    if (!finalState.query) {\n      finalState.query = { ...stateQuery };\n    }\n\n    let vizStateSent = null;\n    const handleVizStateChange = (currentState) => {\n      const { onVizStateChanged } = this.props;\n      if (onVizStateChanged) {\n        const newVizState = pick(['chartType', 'pivotConfig', 'query'], currentState);\n        // Don't run callbacks more than once unless the viz state has changed since last time\n        if (!vizStateSent || !equals(vizStateSent, newVizState)) {\n          onVizStateChanged(newVizState);\n          // use clone to make sure we don't save object references\n          vizStateSent = clone(newVizState);\n        }\n      }\n    };\n\n    // deprecated, setters replaced by onVizStateChanged\n    const runSetters = (currentState) => {\n      if (setVizState) {\n        setVizState(pick(['chartType', 'pivotConfig', 'query'], currentState));\n      }\n      if (currentState.query && setQuery) {\n        setQuery(currentState.query);\n      }\n    };\n\n    if (finalState.shouldApplyHeuristicOrder) {\n      finalState.query.order = defaultOrder(finalState.query);\n    }\n\n    finalState.pivotConfig = ResultSet.getNormalizedPivotConfig(\n      finalState.query,\n      finalState.pivotConfig !== undefined ? finalState.pivotConfig : statePivotConfig\n    );\n\n    finalState.missingMembers = this.getMissingMembers(finalState.query, meta);\n    finalState.chartType = finalState.chartType || state.chartType || chartType;\n\n    // deprecated\n    runSetters({\n      ...state,\n      query: finalState.query,\n    });\n\n    // Update optimistically so that UI does not stutter\n    this.setState({\n      ...finalState,\n      queryError: null,\n    });\n\n    handleVizStateChange(finalState);\n\n    const shouldFetchDryRun = !equals(\n      pick(['measures', 'dimensions', 'timeDimensions'], stateQuery),\n      pick(['measures', 'dimensions', 'timeDimensions'], finalState.query)\n    );\n\n    if (shouldFetchDryRun && isQueryPresent(finalState.query) && finalState.missingMembers.length === 0) {\n      try {\n        const response = await this.cubeApi().dryRun(finalState.query, {\n          mutexObj: this.mutexObj,\n        });\n\n        if (finalState.shouldApplyHeuristicOrder) {\n          finalState.query.order = (response.queryOrder || []).reduce((memo, current) => ({ ...memo, ...current }), {});\n        }\n\n        finalState.pivotConfig = ResultSet.getNormalizedPivotConfig(response.pivotQuery, finalState.pivotConfig);\n        finalState.validatedQuery = this.validatedQuery(finalState);\n        finalState.dryRunResponse = response;\n\n        // deprecated\n        if (isQueryPresent(stateQuery)) {\n          runSetters({\n            ...this.state,\n            ...finalState,\n          });\n        }\n      } catch (error) {\n        this.setState({\n          queryError: new Error(error.response?.plainError || error.message),\n          richQueryError: new Error(error.message || error.toString())\n        });\n      }\n    }\n\n    this.setState(finalState, () => handleVizStateChange(this.state));\n  }\n\n  validatedQuery(state) {\n    const { query } = state || this.state;\n\n    return validateQuery(query);\n  }\n\n  defaultHeuristics(newState) {\n    const { query, sessionGranularity, meta } = this.state;\n\n    return defaultHeuristics(newState, query, {\n      meta,\n      sessionGranularity: sessionGranularity || 'day',\n    });\n  }\n\n  applyStateChangeHeuristics(newState) {\n    const { stateChangeHeuristics, disableHeuristics } = this.props;\n    if (disableHeuristics) {\n      return newState;\n    }\n    return (stateChangeHeuristics && stateChangeHeuristics(this.state, newState)) || this.defaultHeuristics(newState);\n  }\n\n  render() {\n    const { query } = this.state;\n    const { cubeApi, render, wrapWithQueryRenderer } = this.props;\n\n    if (wrapWithQueryRenderer) {\n      return (\n        <QueryRenderer\n          query={query}\n          cubeApi={cubeApi}\n          resetResultSetOnChange={false}\n          render={(queryRendererProps) => {\n            if (render) {\n              return render(this.prepareRenderProps(queryRendererProps));\n            }\n            return null;\n          }}\n        />\n      );\n    } else {\n      if (render) {\n        return render(this.prepareRenderProps());\n      }\n      return null;\n    }\n  }\n}\n","import React from 'react';\nimport CubeContext from './CubeContext';\n\nexport default function CubeProvider({ cubeApi, children, options = {} }) {\n  return (\n    <CubeContext.Provider value={{\n      cubeApi,\n      options\n    }}\n    >\n      {children}\n    </CubeContext.Provider>\n  );\n}\n","import { useRef } from 'react';\nimport { equals } from 'ramda';\n\nexport default function useDeepCompareMemoize(value) {\n  const ref = useRef([]);\n\n  if (!equals(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n","import { useEffect, useRef } from 'react';\n\nexport function useIsMounted() {\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return () => isMounted.current;\n}\n","import { useContext, useEffect, useState, useRef } from 'react';\nimport { isQueryPresent } from '@cubejs-client/core';\n\nimport CubeContext from '../CubeContext';\nimport useDeepCompareMemoize from './deep-compare-memoize';\nimport { useIsMounted } from './is-mounted';\n\nexport function useCubeFetch(method, options = {}) {\n  const isMounted = useIsMounted();\n  const context = useContext(CubeContext);\n  const mutexRef = useRef({});\n\n  const [response, setResponse] = useState({\n    isLoading: false,\n    response: null,\n  });\n  const [error, setError] = useState(null);\n\n  const { skip = false } = options;\n\n  async function load(loadOptions = {}, ignoreSkip = false) {\n    const cubeApi = options.cubeApi || context?.cubeApi;\n    const query = loadOptions.query || options.query;\n\n    const queryCondition = method === 'meta' ? true : query && isQueryPresent(query);\n\n    if (cubeApi && (ignoreSkip || !skip) && queryCondition) {\n      setError(null);\n      setResponse({\n        isLoading: true,\n        response: null,\n      });\n\n      const coreOptions = {\n        mutexObj: mutexRef.current,\n        mutexKey: method,\n      };\n      const args = method === 'meta' ? [coreOptions] : [query, coreOptions];\n\n      try {\n        const response = await cubeApi[method](...args);\n\n        if (isMounted()) {\n          setResponse({\n            response,\n            isLoading: false,\n          });\n        }\n      } catch (error) {\n        if (isMounted()) {\n          setError(error);\n          setResponse({\n            isLoading: false,\n            response: null,\n          });\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    load();\n  }, useDeepCompareMemoize([Object.keys(options.query?.order || {}), options, context]));\n\n  return {\n    ...response,\n    error,\n    refetch: (options) => load(options, true),\n  };\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useCubeSql(query, options = {}) {\n  return useCubeFetch('sql', {\n    ...options,\n    query\n  });\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useDryRun(query, options = {}) {\n  return useCubeFetch('dryRun', {\n    ...options,\n    query,\n  });\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useLazyDryRun(query, options = {}) {\n  const { refetch, ...result } = useCubeFetch('dryRun', {\n    ...options,\n    query,\n    skip: true\n  });\n\n  return [refetch, result];\n}\n","import { useContext, useEffect, useState, useRef } from 'react';\nimport { isQueryPresent, areQueriesEqual } from '@cubejs-client/core';\n\nimport CubeContext from '../CubeContext';\nimport useDeepCompareMemoize from './deep-compare-memoize';\nimport { useIsMounted } from './is-mounted';\n\nexport function useCubeQuery(query, options = {}) {\n  const mutexRef = useRef({});\n  const isMounted = useIsMounted();\n  const [currentQuery, setCurrentQuery] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const [resultSet, setResultSet] = useState(null);\n  const [progress, setProgress] = useState(null);\n  const [error, setError] = useState(null);\n  const context = useContext(CubeContext);\n\n  let subscribeRequest = null;\n\n  const progressCallback = ({ progressResponse }) => setProgress(progressResponse);\n\n  async function fetch() {\n    const { resetResultSetOnChange } = options;\n    const cubeApi = options.cubeApi || context?.cubeApi;\n\n    if (!cubeApi) {\n      throw new Error('Cube API client is not provided');\n    }\n\n    if (resetResultSetOnChange) {\n      setResultSet(null);\n    }\n\n    setError(null);\n    setLoading(true);\n    \n    try {\n      const response = await cubeApi.load(query, {\n        mutexObj: mutexRef.current,\n        mutexKey: 'query',\n        progressCallback,\n        castNumerics: Boolean(typeof options.castNumerics === 'boolean' ? options.castNumerics : context?.options?.castNumerics)\n      });\n\n      if (isMounted()) {\n        setResultSet(response);\n        setProgress(null);\n      }\n    } catch (error) {\n      if (isMounted()) {\n        setError(error);\n        setResultSet(null);\n        setProgress(null);\n      }\n    }\n\n    if (isMounted()) {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    const { skip = false, resetResultSetOnChange } = options;\n\n    const cubeApi = options.cubeApi || context?.cubeApi;\n\n    if (!cubeApi) {\n      throw new Error('Cube API client is not provided');\n    }\n\n    async function loadQuery() {\n      if (!skip && isQueryPresent(query)) {\n        if (!areQueriesEqual(currentQuery, query)) {\n          if (resetResultSetOnChange == null || resetResultSetOnChange) {\n            setResultSet(null);\n          }\n          setCurrentQuery(query);\n        }\n\n        setError(null);\n        setLoading(true);\n\n        try {\n          if (subscribeRequest) {\n            await subscribeRequest.unsubscribe();\n            subscribeRequest = null;\n          }\n\n          if (options.subscribe) {\n            subscribeRequest = cubeApi.subscribe(\n              query,\n              {\n                mutexObj: mutexRef.current,\n                mutexKey: 'query',\n                progressCallback,\n              },\n              (e, result) => {\n                if (isMounted()) {\n                  if (e) {\n                    setError(e);\n                  } else {\n                    setResultSet(result);\n                  }\n                  setLoading(false);\n                  setProgress(null);\n                }\n              }\n            );\n          } else {\n            await fetch();\n          }\n        } catch (e) {\n          if (isMounted()) {\n            setError(e);\n            setResultSet(null);\n            setLoading(false);\n            setProgress(null);\n          }\n        }\n      }\n    }\n\n    loadQuery();\n\n    return () => {\n      if (subscribeRequest) {\n        subscribeRequest.unsubscribe();\n        subscribeRequest = null;\n      }\n    };\n  }, useDeepCompareMemoize([query, Object.keys((query && query.order) || {}), options, context]));\n\n  return {\n    isLoading,\n    resultSet,\n    error,\n    progress,\n    previousQuery: currentQuery,\n    refetch: fetch\n  };\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useCubeMeta(options = {}) {\n  return useCubeFetch('meta', options);\n}\n"],"names":["createContext","QueryRenderer","props","state","mutexObj","query","queries","load","loadQueries","nextProps","nextState","render","cubeApi","loadSql","updateOnlyOnStateChange","equals","prevProps","context","resetResultSetOnChange","setState","isLoading","error","sqlQuery","resultSet","isQueryPresent","sql","mutexKey","then","Promise","all","resultPromises","toPairs","map","name","r","fromPairs","loadState","Error","response","plainError","message","toString","loadingState","React","Component","CubeContext","QueryRendererWithTotals","restProps","totals","dimensions","timeDimensions","td","granularity","undefined","main","removeEmpty","obj","_typeof","Object","fromEntries","entries","filter","v","k","Array","isArray","granularities","title","QueryBuilder","metaError","richMetaError","metaErrorStack","isFetchingMeta","meta","stack","replace","updateQuery","defaultQuery","chartType","defaultChartType","validatedQuery","missingMembers","dryRunResponse","vizState","initialVizState","orderMembersOrderKeys","prevContext","fetchMeta","schemaVersion","onSchemaChange","newMeta","refresh","getQueryMembers","member","resolvedMember","resolveMember","Boolean","queryRendererProps","getName","toTimeDimension","rangeSelection","compareDateRange","dateRange","dimension","toFilter","operator","includes","values","updateMethods","memberType","toQuery","add","concat","remove","_","index","update","updateWith","members","splice","queryError","pivotConfig","flatFilters","uniqBy","prop","flattenFilters","filters","m","i","operators","filterOperatorsForMember","measures","segments","availableMeasures","availableDimensions","availableSegments","availableFilterMembers","availableMembers","membersGroupedByCube","membersForQuery","indexedMeasures","indexBy","indexedDimensions","cubeNames","uniq","keys","sort","cube","a","b","shortTitle","activeOrder","order","orderMembers","id","length","find","availableTimeDimensions","type","queryUpdate","updateMeasures","updateDimensions","updateSegments","updateTimeDimensions","updateFilters","updateChartType","newChartType","updateVizState","updateOrder","set","memberId","newOrder","orderMember","reduce","acc","reorder","sourceIndex","destinationIndex","nextArray","moveItemInArray","updatePivotConfig","moveItem","sourceAxis","destinationAxis","movePivotItem","config","limit","removeEmptyQueryFields","setQuery","setVizState","stateQuery","statePivotConfig","finalState","applyStateChangeHeuristics","vizStateSent","handleVizStateChange","currentState","onVizStateChanged","newVizState","pick","clone","runSetters","shouldApplyHeuristicOrder","defaultOrder","ResultSet","getNormalizedPivotConfig","getMissingMembers","shouldFetchDryRun","dryRun","queryOrder","memo","current","pivotQuery","richQueryError","validateQuery","newState","sessionGranularity","defaultHeuristics","stateChangeHeuristics","disableHeuristics","wrapWithQueryRenderer","prepareRenderProps","currentQuery","CubeProvider","children","options","useDeepCompareMemoize","value","ref","useRef","useIsMounted","isMounted","useEffect","useCubeFetch","method","useContext","mutexRef","useState","setResponse","setError","skip","loadOptions","ignoreSkip","queryCondition","coreOptions","args","refetch","useCubeSql","useDryRun","useLazyDryRun","result","useCubeQuery","setCurrentQuery","setLoading","setResultSet","progress","setProgress","subscribeRequest","progressCallback","progressResponse","fetch","castNumerics","loadQuery","areQueriesEqual","unsubscribe","subscribe","e","previousQuery","useCubeMeta"],"mappings":"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"}